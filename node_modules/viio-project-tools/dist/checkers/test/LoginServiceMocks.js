"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.applyLoginMocks = void 0;
var users = {};
var credentials = {};
function applyLoginMocks(mock) {
    mock.onPost(/\/register/).reply((config) => {
        let data = JSON.parse(config.data);
        let user = { userId: Object.keys(users).length + 1, roleId: 1, metadata: {} };
        let key = "" + user.userId;
        users[key] = user;
        credentials[key] = Object.assign({ userId: user.userId, identityId: 1 }, data);
        return [200, { status: 'Ok', message: 'User registered', item: [credentials[key]] }];
    });
    mock.onPost(/\/login/).reply((config) => {
        return [200, { jwt: 'eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEzLCJyb2xlSWQiOjEsImlhdCI6MTY4MDAzNTA1MiwiZXhwIjoxNjgwMDQxMDUyfQ.awEFjDF0QugehpDM48l5Uy8cvyVNB4BRRgZqSH3MaNIEApEh-FBF94Gtqp9hSe-tJ_jY26ShmONot0sxjZ1Tjg' }];
    });
    mock.onPost(/\/logout/).reply((config) => {
        return [200, { message: 'Session was closed' }];
    });
    mock.onPost(/\/verify/).reply((config) => {
        let data = JSON.parse(config.data);
        if (data.jwt === 'eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEzLCJyb2xlSWQiOjEsImlhdCI6MTY4MDAzNTA1MiwiZXhwIjoxNjgwMDQxMDUyfQ.awEFjDF0QugehpDM48l5Uy8cvyVNB4BRRgZqSH3MaNIEApEh-FBF94Gtqp9hSe-tJ_jY26ShmONot0sxjZ1Tjg')
            return [200, { userId: 1, roleId: 1 }];
        return [401, { errorType: 'JWTRecivedIsNotActive', message: 'Expired token' }];
    });
    mock.onGet(/\/userCredentials\?email=[a-zA-Z0-9@.]+/).reply((config) => {
        let searchedEmail = config.url.split('email=')[1];
        for (let key of Object.keys(credentials))
            if (credentials[key].email === searchedEmail)
                return [200, { result: [credentials[key]] }];
        return [200, { result: [] }];
    });
    //http://localhost:8102/v1/userCredentials?email=user1@mail.test
}
exports.applyLoginMocks = applyLoginMocks;
//# sourceMappingURL=LoginServiceMocks.js.map