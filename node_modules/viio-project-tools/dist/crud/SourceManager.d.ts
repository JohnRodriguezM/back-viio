import { AxiosRequestConfig } from "axios";
import { CrudServiceManager, StandardIdRequestDefinition } from "./CrudServiceManager";
export interface ISource {
    sourceId?: number;
    sourceTypeId?: number;
    name: string;
    updatedAt?: string;
    createdAt?: string;
    config?: AxiosRequestConfig;
}
export interface ISourceDetails {
    name: string;
    type?: string;
    config?: AxiosRequestConfig;
}
export declare class SourceManager extends CrudServiceManager<ISourceDetails, ISource> {
    private url;
    private sourceTypeManager;
    constructor(url: string);
    find(details: ISourceDetails): Promise<ISource | undefined>;
    findById(id: StandardIdRequestDefinition): Promise<ISource | undefined>;
    create(details: ISourceDetails): Promise<ISource | undefined>;
    modify(source: ISource): Promise<any>;
    destroy(source: ISource): Promise<any>;
}
