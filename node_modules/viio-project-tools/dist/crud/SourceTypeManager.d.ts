import { AxiosRequestConfig } from "axios";
import { CrudServiceManager, StandardIdRequestDefinition } from "./CrudServiceManager";
export interface ISourceType {
    sourceTypeId?: number;
    type: string;
    updatedAt?: string;
    createdAt?: string;
    config?: AxiosRequestConfig;
}
export interface ISourceTypeDetails {
    type: string;
    config?: AxiosRequestConfig;
}
export declare class SourceTypeManager extends CrudServiceManager<ISourceTypeDetails, ISourceType> {
    private url;
    constructor(url: string);
    find(details: ISourceTypeDetails): Promise<ISourceType | undefined>;
    findById(id: StandardIdRequestDefinition): Promise<ISourceType | undefined>;
    create(details: ISourceTypeDetails): Promise<ISourceType | undefined>;
    modify(sourceType: ISourceType): Promise<any>;
    destroy(sourceType: ISourceType): Promise<any>;
}
